basePath: /
consumes:
- application/json
definitions:
  model.DemoReq:
    properties:
      httpCode:
        description: 响应HTTPCode，不传默认响应200，支持200/400/401/403/500
        example: 200
        type: integer
    type: object
  model.IdReq:
    properties:
      id:
        description: 数据ID
        example: 1
        type: integer
    required:
    - id
    type: object
  model.PageRes:
    properties:
      list:
        description: 分页数据
      total:
        description: 数据总量
        type: integer
    type: object
  model.SortReq:
    properties:
      id:
        description: 数据ID
        example: 1
        type: integer
      sort:
        description: 序号
        example: 1
        type: integer
    required:
    - id
    type: object
  model.Tree:
    properties:
      children:
        description: 子树
        items:
          $ref: '#/definitions/model.Tree'
        type: array
      key:
        description: 树键
        example: ROOT
        type: string
      level:
        description: 表示树等级
        example: "1"
        type: string
      title:
        description: 树标题
        example: 根节点
        type: string
    type: object
  platDb.Permission:
    properties:
      alias:
        description: 权限别名，英文+下划线
        example: plat_account
        type: string
      createAt:
        description: 创建时间
        type: string
      id:
        description: 默认数据ID
        example: 1
        type: integer
      level:
        description: 权限等级 1分组（一级导航）2模块（页面）3功能（按钮）
        example: "1"
        type: string
      name:
        description: 权限名称，界面展示，建议与界面导航一致
        example: 账号管理
        type: string
      pid:
        description: 父级ID，默认为1
        example: 1
        type: integer
      routerIds:
        description: 路由集，当前对象会忽略此字段
        example:
        - 1
        - 2
        - 3
        items:
          type: integer
        type: array
      routerList:
        description: 路由对象
        items:
          $ref: '#/definitions/platDb.Router'
        type: array
      sort:
        description: 权限排序（独立接口）
        example: 1
        type: integer
      static:
        description: 默认启用权限，1 不启 2启用
        example: "1"
        type: string
      status:
        description: 状态 0正常 1锁定 2封存
        example: "0"
        type: string
      updateAt:
        description: 更新时间
        type: string
    type: object
  platDb.Response:
    properties:
      code:
        description: 响应码 F/S+XXX+XXX
        example: F7000
        type: string
      createAt:
        description: 创建时间
        type: string
      enUs:
        description: 英文响应文言
        example: Role query failed
        type: string
      id:
        description: 数据ID
        example: 1
        type: integer
      mark:
        description: 变更标识 0可变更 1禁止变更
        example: "0"
        type: string
      remark:
        description: 其他备注信息
        example: 角色查询失败
        type: string
      serviceCode:
        description: 业务ID，来源于字典，指定响应码归属业务
        example: "7"
        type: string
      status:
        description: 状态 0正常 1锁定 2封存
        example: "0"
        type: string
      type:
        description: 响应类型，该字段用于筛选，可配置F和S
        example: F
        type: string
      updateAt:
        description: 更新时间
        type: string
      zhCn:
        description: 中文响应文言
        example: 角色查询失败
        type: string
    type: object
  platDb.Role:
    properties:
      createAt:
        description: 创建时间
        type: string
      id:
        description: 默认数据ID
        type: integer
      mark:
        description: 变更标识 0可变更1禁止变更（前端不提交后端默认0）
        type: string
      name:
        description: 角色名称
        maxLength: 16
        type: string
      permissionIds:
        description: 权限集，当前对象会忽略此字段，权限合法性校验交给控制层
        items:
          type: integer
        type: array
      remark:
        description: 角色备注
        maxLength: 64
        type: string
      status:
        description: 状态 0正常 1锁定 2封存
        example: "0"
        type: string
      tenantId:
        description: 租户ID（后端赋值）
        type: integer
      updateAt:
        description: 更新时间
        type: string
    required:
    - name
    type: object
  platDb.Router:
    properties:
      id:
        description: 默认数据ID
        example: 1
        type: integer
      name:
        description: 路由名称，用于界面展示，与权限关联
        example: 开放账密登陆
        type: string
      printReq:
        description: 请求日志打印 1 不打印 2 打印
        example: "1"
        type: string
      printRes:
        description: 响应日志打印 1 不打印 2 打印
        example: "2"
        type: string
      serviceCode:
        description: 业务编码（字典），为接口分组
        example: "1"
        type: string
      type:
        description: 免授权路由 1 授权 2 免授权
        example: "1"
        type: string
      url:
        description: 路由地址，后端访问URL 后端不再URL中携带参数，统一Post处理内容
        example: /open/auth/login
        type: string
    type: object
  platModel.AuthLoginReq:
    properties:
      account:
        description: 账号
        example: stone
        type: string
      password:
        description: 密码
        example: "123456"
        type: string
      tenantAlias:
        description: 租户别名
        example: stone
        type: string
    required:
    - account
    - password
    - tenantAlias
    type: object
  platModel.AuthLoginRes:
    properties:
      token:
        description: 32位登陆Token，时间串+18位随机字符
        example: 20230203090105DpC4K9Tu8IYagEgGM7
        type: string
    type: object
  platModel.DictListReq:
    properties:
      groupKeys:
        description: 需要查询的字典分组
        example:
        - '''serviceCode'''
        - '''responseType'''
        items:
          type: string
        type: array
    type: object
  platModel.DictListRes:
    properties:
      list:
        additionalProperties:
          items:
            $ref: '#/definitions/platModel.DictRes'
          type: array
        description: 字典下拉列表 {'serviceCode':"[{'label':'基础','value':'1'}]"}
        type: object
      map:
        additionalProperties:
          additionalProperties:
            type: string
          type: object
        description: 字典翻译Map {'serviceCode':{'1':'基础'}}
        type: object
    type: object
  platModel.DictRes:
    properties:
      label:
        description: 字典名
        example: 基础
        type: string
      value:
        description: 字典值
        example: "1"
        type: string
    type: object
  platModel.OpenTenantReq:
    properties:
      tenantAlias:
        description: 租戶别名
        example: stone
        type: string
    required:
    - tenantAlias
    type: object
  platModel.OpenTenantRes:
    properties:
      alias:
        description: 租戶别名，全局唯一
        example: stone
        type: string
      icon:
        description: 租户Icon，浏览器顶部图标
        example: /static/img/icon.png
        type: string
      logo:
        description: 租户Logo，登陆和界面中的Logo
        example: /static/img/logo
        type: string
      name:
        description: 租戶名称，全局唯一
        example: 基座租户
        type: string
      theme:
        description: 租户模板，登陆界面的风格模板
        example: light
        type: string
    type: object
  platModel.PermissionAddReq:
    properties:
      alias:
        description: 权限别名，英文+下划线，规范如下： plat  plat_account plat_account_add
        example: plat_account
        maxLength: 32
        type: string
      level:
        description: 权限等级 1分组（一级导航）2模块（页面）3功能（按钮）
        enum:
        - "1"
        - "2"
        - "3"
        example: "1"
        type: string
      name:
        description: 权限名称，界面展示，建议与界面导航一致
        example: 账号管理
        maxLength: 32
        type: string
      pid:
        description: 父级ID，默认为1
        example: 1
        type: integer
      routerIds:
        description: 路由集，提交路由ID数组
        example:
        - 1
        - 2
        - 3
        items:
          type: integer
        type: array
        uniqueItems: true
      static:
        description: 默认启用权限，1 不启 2启用  启用后，该权限默认被分配，不可去勾
        enum:
        - "1"
        - "2"
        example: "1"
        type: string
    required:
    - alias
    - level
    - name
    - pid
    - static
    type: object
  platModel.PermissionBroRes:
    properties:
      id:
        description: 默认数据ID
        example: 1
        type: integer
      name:
        description: 权限名称，界面展示，建议与界面导航一致
        example: 账号管理
        type: string
      sort:
        description: 权限排序
        example: 1
        type: integer
    type: object
  platModel.PermissionEditReq:
    properties:
      alias:
        description: 权限别名，英文+下划线，规范如下： plat  plat_account plat_account_add
        example: plat_account
        maxLength: 32
        type: string
      id:
        description: 默认数据ID
        example: 1
        type: integer
      name:
        description: 权限名称，界面展示，建议与界面导航一致
        example: 账号管理
        maxLength: 32
        type: string
      routerIds:
        description: 路由集，提交路由ID数组
        example:
        - 1
        - 2
        - 3
        items:
          type: integer
        type: array
        uniqueItems: true
    required:
    - alias
    - id
    - name
    type: object
  platModel.ResponseAddReq:
    properties:
      enUs:
        description: 英文响应文言
        example: Role query failed
        type: string
      remark:
        description: 其他备注信息
        example: 角色查询失败
        type: string
      serviceCode:
        description: 业务ID，来源于字典，指定响应码归属业务
        example: "7"
        type: string
      type:
        description: 响应类型，该字段用于筛选，可配置S和F
        enum:
        - S
        - F
        example: F
        type: string
      zhCn:
        description: 中文响应文言
        example: 角色查询失败
        type: string
    required:
    - serviceCode
    - type
    type: object
  platModel.ResponseEditReq:
    properties:
      enUs:
        description: 英文响应文言
        example: Role query failed
        type: string
      id:
        description: 数据ID
        example: 1
        type: integer
      remark:
        description: 其他备注信息
        example: 角色查询失败
        type: string
      zhCn:
        description: 中文响应文言
        example: 角色查询失败
        type: string
    required:
    - id
    type: object
  platModel.ResponsePageReq:
    properties:
      code:
        description: 响应码
        example: F7000
        type: string
      current:
        description: 当前页
        example: 1
        type: integer
      pageSize:
        description: 单页数量
        example: 10
        type: integer
      responseType:
        description: 响应类型，该字段用于筛选，可配置S和F
        enum:
        - S
        - F
        example: S
        type: string
      serviceCode:
        description: 业务编码，仅允许提交数字
        example: "7"
        type: string
    type: object
  platModel.RoleAddReq:
    properties:
      name:
        description: 角色名称
        example: admin
        maxLength: 16
        type: string
      permissionIds:
        description: 权限集
        example:
        - 1
        - 2
        - 3
        items:
          type: integer
        type: array
        uniqueItems: true
      remark:
        description: 角色备注
        example: 管理员
        maxLength: 64
        type: string
    required:
    - name
    type: object
  platModel.RoleEditReq:
    properties:
      id:
        description: 数据ID
        example: 1
        type: integer
      name:
        description: 角色名称
        example: admin
        maxLength: 16
        type: string
      permissionIds:
        description: 权限集
        example:
        - 1
        - 2
        - 3
        items:
          type: integer
        type: array
        uniqueItems: true
      remark:
        description: 角色备注
        example: 管理员
        maxLength: 64
        type: string
    required:
    - id
    - name
    type: object
  platModel.RolePageReq:
    properties:
      current:
        description: 当前页
        example: 1
        type: integer
      name:
        description: 角色名称
        example: admin
        type: string
      pageSize:
        description: 单页数量
        example: 10
        type: integer
    type: object
  platModel.RouterAddReq:
    properties:
      name:
        description: 路由名称，用于界面展示，与权限关联
        example: 开放账密登陆
        maxLength: 32
        type: string
      printReq:
        description: 请求日志打印 1 不打印 2 打印
        enum:
        - "1"
        - "2"
        example: "1"
        type: string
      printRes:
        description: 响应日志打印 1 不打印 2 打印
        enum:
        - "1"
        - "2"
        example: "2"
        type: string
      serviceCode:
        description: 业务编码（字典），为接口分组
        example: "1"
        type: string
      type:
        description: 免授权路由 1 授权 2 免授权
        enum:
        - "1"
        - "2"
        example: "1"
        type: string
      url:
        description: 路由地址，后端访问URL 后端不再URL中携带参数，统一Post处理内容
        example: /open/auth/login
        maxLength: 64
        type: string
    required:
    - name
    - printReq
    - printRes
    - serviceCode
    - type
    - url
    type: object
  platModel.RouterEditReq:
    properties:
      id:
        description: 默认数据ID
        example: 1
        type: integer
      name:
        description: 路由名称，用于界面展示，与权限关联
        example: 开放账密登陆
        maxLength: 32
        type: string
      printReq:
        description: 请求日志打印 1 不打印 2 打印
        enum:
        - "1"
        - "2"
        example: "1"
        type: string
      printRes:
        description: 响应日志打印 1 不打印 2 打印
        enum:
        - "1"
        - "2"
        example: "2"
        type: string
      serviceCode:
        description: 业务编码（字典），为接口分组
        example: "1"
        type: string
      url:
        description: 路由地址，后端访问URL 后端不再URL中携带参数，统一Post处理内容
        example: /open/auth/login
        maxLength: 64
        type: string
    required:
    - id
    - name
    - printReq
    - printRes
    - serviceCode
    - url
    type: object
  platModel.RouterPageReq:
    properties:
      current:
        description: 当前页
        example: 1
        type: integer
      name:
        description: 路由名称
        type: string
      pageSize:
        description: 单页数量
        example: 10
        type: integer
      serviceCode:
        description: 业务编码，仅允许提交数字
        type: string
      type:
        description: 路由类型，仅允许提交1/2
        enum:
        - "1"
        - "2"
        type: string
      url:
        description: 路由地址，仅允许提交URI
        type: string
    type: object
  resp.DemoAuthLg:
    properties:
      code:
        description: 响应码
        example: E002
        type: string
      msg:
        description: 响应消息
        example: 当前尚未登陆
        type: string
    type: object
  resp.DemoAuthNg:
    properties:
      code:
        description: 响应码
        example: E003
        type: string
      msg:
        description: 响应消息
        example: 当前接口禁止访问
        type: string
    type: object
  resp.DemoErr:
    properties:
      code:
        description: 响应码
        example: E000
        type: string
      msg:
        description: 响应消息
        example: 系统异常
        type: string
    type: object
  resp.DemoOk:
    properties:
      code:
        description: 响应码
        example: SX00X/FX00X
        type: string
      data:
        description: 响应数据
        example: 响应数据
        type: string
      msg:
        description: 响应消息
        example: 操作成功/失败
        type: string
      unPop:
        description: 免弹窗提示
        example: true
        type: boolean
    type: object
  resp.DemoVail:
    properties:
      code:
        description: 响应码
        example: E001
        type: string
      msg:
        description: 响应消息
        example: xx字段应该为必填
        type: string
    type: object
  resp.ResBody:
    properties:
      code:
        description: 响应码
        example: S0000/F0000
        type: string
      data:
        description: 响应数据
      msg:
        description: 响应消息
        example: 操作成功/失败
        type: string
      unPop:
        description: 免弹窗提示
        example: true
        type: boolean
    type: object
host: localhost:8000
info:
  contact:
    email: stone@siteol.com
    name: Stone
    url: https://stone.siteol.com
  description: "# 概述\r\n\r\n物联网基座Stone，提供一个多层级SaaS化的基础开箱即用中台管理服务。\r\n\r\n支持响应码自定义国际化、租户赋权、高粒度权限分配、接口路由规划和实时生效，支持加盟商、业务客户多层级租户嵌套。\r\n\r\n本系统的全部接口采用【POST】【application/json】方式传输数据。\r\n\r\n除开放接口以外的其他接口均需要通过【ApiKeyAuth:请求头[Token]】完成鉴权。\r\n\r\n系统技术栈：Golang、VueNext、MySQL、Redis、Gin、Arco\r\n\r\n#
    接口文档\r\n\r\n该接口文档提供Swagger[支持调试]和ReDoc[阅读增强]两个版本。\r\n\r\n[Swagger[支持调试]：http://localhost:8000/docs/swagger/index.html](http://localhost:8000/docs/swagger/index.html)\r\n\r\n[ReDoc[阅读增强]：http://localhost:8000/docs/redoc/index.html](http://localhost:8000/docs/redoc/index.html)\r\n\r\n##
    生成说明\r\n\r\n// 首次集成\r\n\r\ngo install github.com/swaggo/swag/cmd/swag@latest\r\n\r\n//
    初始化swagger.yaml文件\r\n\r\nswag init\r\n\r\n// 如果像本工程一样依赖了md文件\r\n\r\nswag init
    --md .\r\n\r\n// 删除多余的生成\r\n\r\nrm .\\docs\\docs.go\r\n\r\n删除docs.go是因为本项目中并未采用下述依赖来集成。\r\n\r\n而是通过HTML模板+JS+YAML引入集成，移除docs.go用于避免依赖编译报错。\r\n\r\n-
    github.com/swaggo/swag\r\n- github.com/swaggo/gin-swagger\r\n- github.com/swaggo/files\r\n\r\n源帮助页：[https://github.com/swaggo/swag/blob/master/README_zh-CN.md](https://github.com/swaggo/swag/blob/master/README_zh-CN.md)\r\n"
  title: Stone
  version: "1.0"
  x-logo:
    altText: Stone
    url: /docs/sc/logo.png
paths:
  /docs/sample:
    post:
      consumes:
      - application/json
      description: 系统API基本示例
      operationId: Sample示例
      parameters:
      - description: 示例请求
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/model.DemoReq'
      produces:
      - application/json
      responses:
        "200":
          description: 业务受理成功
          schema:
            $ref: '#/definitions/resp.DemoOk'
        "400":
          description: 数据校验失败
          schema:
            $ref: '#/definitions/resp.DemoVail'
        "401":
          description: 当前尚未登陆
          schema:
            $ref: '#/definitions/resp.DemoAuthLg'
        "403":
          description: 权限校验失败
          schema:
            $ref: '#/definitions/resp.DemoAuthNg'
        "500":
          description: 服务系统异常
          schema:
            $ref: '#/definitions/resp.DemoErr'
      security:
      - Token: []
      summary: 通用API示例
      tags:
      - 开放接口
  /open/auth/login:
    post:
      consumes:
      - application/json
      description: 平台最基础的账号密码登陆方式登陆
      operationId: AuthLogin开放账密登陆
      parameters:
      - description: 请求
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/platModel.AuthLoginReq'
      produces:
      - application/json
      responses:
        "200":
          description: 登陆成功
          schema:
            allOf:
            - $ref: '#/definitions/resp.ResBody'
            - properties:
                data:
                  $ref: '#/definitions/platModel.AuthLoginRes'
              type: object
      summary: 开放账密登陆
      tags:
      - 开放接口
  /open/tenant/get:
    post:
      consumes:
      - application/json
      description: 获取租户基础信息，前置开放接口
      operationId: GetOpenTenant获取租户信息
      parameters:
      - description: 请求
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/platModel.OpenTenantReq'
      produces:
      - application/json
      responses:
        "200":
          description: 响应成功
          schema:
            allOf:
            - $ref: '#/definitions/resp.ResBody'
            - properties:
                data:
                  $ref: '#/definitions/platModel.OpenTenantRes'
              type: object
      summary: 获取租户信息
      tags:
      - 开放接口
  /plat/dict/list:
    post:
      consumes:
      - application/json
      description: 获取字典下拉列表，用于选择框
      operationId: ListDict字典下拉列表
      parameters:
      - description: 语言，不传默认为zh-CN
        in: header
        name: Lang
        type: string
      - description: 请求
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/platModel.DictListReq'
      produces:
      - application/json
      responses:
        "200":
          description: 响应成功
          schema:
            allOf:
            - $ref: '#/definitions/resp.ResBody'
            - properties:
                data:
                  $ref: '#/definitions/platModel.DictListRes'
              type: object
      security:
      - Token: []
      summary: 字典下拉列表
      tags:
      - 数据字典
  /plat/permission/add:
    post:
      consumes:
      - application/json
      description: 创建一个全新的权限，支持勾选接口路由
      operationId: AddPermission权限创建
      parameters:
      - description: 请求
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/platModel.PermissionAddReq'
      produces:
      - application/json
      responses:
        "200":
          description: 响应成功
          schema:
            allOf:
            - $ref: '#/definitions/resp.ResBody'
            - properties:
                data:
                  type: boolean
              type: object
      security:
      - Token: []
      summary: 权限创建
      tags:
      - 访问权限
  /plat/permission/bro:
    post:
      consumes:
      - application/json
      description: 根据ID获取当前权限以及兄弟权限列表
      operationId: BroPermission获取兄弟权限
      parameters:
      - description: 请求
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/model.IdReq'
      produces:
      - application/json
      responses:
        "200":
          description: 响应成功
          schema:
            allOf:
            - $ref: '#/definitions/resp.ResBody'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/platModel.PermissionBroRes'
                  type: array
              type: object
      security:
      - Token: []
      summary: 获取兄弟权限
      tags:
      - 访问权限
  /plat/permission/del:
    post:
      consumes:
      - application/json
      description: 根据ID对权限数据删除，存在子集时无法删除
      operationId: DelPermission权限删除
      parameters:
      - description: 请求
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/model.IdReq'
      produces:
      - application/json
      responses:
        "200":
          description: 响应成功
          schema:
            allOf:
            - $ref: '#/definitions/resp.ResBody'
            - properties:
                data:
                  type: boolean
              type: object
      security:
      - Token: []
      summary: 权限删除
      tags:
      - 访问权限
  /plat/permission/edit:
    post:
      consumes:
      - application/json
      description: 根据ID对权限数据编辑，仅支持部分字段更新
      operationId: EditPermission权限编辑
      parameters:
      - description: 请求
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/platModel.PermissionEditReq'
      produces:
      - application/json
      responses:
        "200":
          description: 响应成功
          schema:
            allOf:
            - $ref: '#/definitions/resp.ResBody'
            - properties:
                data:
                  type: boolean
              type: object
      security:
      - Token: []
      summary: 权限编辑
      tags:
      - 访问权限
  /plat/permission/get:
    post:
      consumes:
      - application/json
      description: 根据ID查询权限数据
      operationId: GetPermission权限查询
      parameters:
      - description: 请求
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/model.IdReq'
      produces:
      - application/json
      responses:
        "200":
          description: 响应成功
          schema:
            allOf:
            - $ref: '#/definitions/resp.ResBody'
            - properties:
                data:
                  $ref: '#/definitions/platDb.Permission'
              type: object
      security:
      - Token: []
      summary: 权限查询
      tags:
      - 访问权限
  /plat/permission/sort:
    post:
      consumes:
      - application/json
      description: 同级权限排序功能
      operationId: SortPermission权限排序
      parameters:
      - description: 请求
        in: body
        name: req
        required: true
        schema:
          items:
            $ref: '#/definitions/model.SortReq'
          type: array
      produces:
      - application/json
      responses:
        "200":
          description: 响应成功
          schema:
            allOf:
            - $ref: '#/definitions/resp.ResBody'
            - properties:
                data:
                  type: boolean
              type: object
      security:
      - Token: []
      summary: 权限排序
      tags:
      - 访问权限
  /plat/permission/tree:
    post:
      consumes:
      - application/json
      description: 获取权限树，不同级别用户根据所属租户权限集看到权限树
      operationId: TreePermission权限树
      produces:
      - application/json
      responses:
        "200":
          description: 响应成功
          schema:
            allOf:
            - $ref: '#/definitions/resp.ResBody'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/model.Tree'
                  type: array
              type: object
      security:
      - Token: []
      summary: 权限树
      tags:
      - 访问权限
  /plat/response/add:
    post:
      consumes:
      - application/json
      description: 创建一个全新的响应码
      operationId: AddResponse响应码创建
      parameters:
      - description: 请求
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/platModel.ResponseAddReq'
      produces:
      - application/json
      responses:
        "200":
          description: 响应成功
          schema:
            allOf:
            - $ref: '#/definitions/resp.ResBody'
            - properties:
                data:
                  type: boolean
              type: object
      security:
      - Token: []
      summary: 响应码创建
      tags:
      - 响应文言
  /plat/response/del:
    post:
      consumes:
      - application/json
      description: 根据ID删除响应码，本数据为软删除
      operationId: DelResponse响应码删除
      parameters:
      - description: 请求
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/model.IdReq'
      produces:
      - application/json
      responses:
        "200":
          description: 响应成功
          schema:
            allOf:
            - $ref: '#/definitions/resp.ResBody'
            - properties:
                data:
                  type: boolean
              type: object
      security:
      - Token: []
      summary: 响应码删除
      tags:
      - 响应文言
  /plat/response/edit:
    post:
      consumes:
      - application/json
      description: 根据ID编辑响应码，只有部分字段可以修改
      operationId: EditResponse响应码编辑
      parameters:
      - description: 请求
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/platModel.ResponseEditReq'
      produces:
      - application/json
      responses:
        "200":
          description: 响应成功
          schema:
            allOf:
            - $ref: '#/definitions/resp.ResBody'
            - properties:
                data:
                  type: boolean
              type: object
      security:
      - Token: []
      summary: 响应码编辑
      tags:
      - 响应文言
  /plat/response/get:
    post:
      consumes:
      - application/json
      description: 根据ID查询响应码
      operationId: GetResponse响应码查询
      parameters:
      - description: 请求
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/model.IdReq'
      produces:
      - application/json
      responses:
        "200":
          description: 响应成功
          schema:
            allOf:
            - $ref: '#/definitions/resp.ResBody'
            - properties:
                data:
                  $ref: '#/definitions/platDb.Response'
              type: object
      security:
      - Token: []
      summary: 响应码查询
      tags:
      - 响应文言
  /plat/response/page:
    post:
      consumes:
      - application/json
      description: 查询响应码分页数据
      operationId: PageResponse响应码分页
      parameters:
      - description: 请求
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/platModel.ResponsePageReq'
      produces:
      - application/json
      responses:
        "200":
          description: 响应成功
          schema:
            allOf:
            - $ref: '#/definitions/resp.ResBody'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/model.PageRes'
                  - properties:
                      list:
                        items:
                          $ref: '#/definitions/platDb.Response'
                        type: array
                    type: object
              type: object
      security:
      - Token: []
      summary: 响应码分页
      tags:
      - 响应文言
  /plat/role/add:
    post:
      consumes:
      - application/json
      description: 创建一个全新的角色
      operationId: AddRole角色创建
      parameters:
      - description: 请求
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/platModel.RoleAddReq'
      produces:
      - application/json
      responses:
        "200":
          description: 响应成功
          schema:
            allOf:
            - $ref: '#/definitions/resp.ResBody'
            - properties:
                data:
                  type: boolean
              type: object
      security:
      - Token: []
      summary: 角色创建
      tags:
      - 角色配置
  /plat/role/del:
    post:
      consumes:
      - application/json
      description: 根据ID删除角色，本数据为软删除
      operationId: DelRole角色删除
      parameters:
      - description: 请求
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/model.IdReq'
      produces:
      - application/json
      responses:
        "200":
          description: 响应成功
          schema:
            allOf:
            - $ref: '#/definitions/resp.ResBody'
            - properties:
                data:
                  type: boolean
              type: object
      security:
      - Token: []
      summary: 角色删除
      tags:
      - 角色配置
  /plat/role/edit:
    post:
      consumes:
      - application/json
      description: 根据ID编辑角色，只有部分字段可以修改
      operationId: EditRole角色编辑
      parameters:
      - description: 请求
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/platModel.RoleEditReq'
      produces:
      - application/json
      responses:
        "200":
          description: 响应成功
          schema:
            allOf:
            - $ref: '#/definitions/resp.ResBody'
            - properties:
                data:
                  type: boolean
              type: object
      security:
      - Token: []
      summary: 角色编辑
      tags:
      - 角色配置
  /plat/role/get:
    post:
      consumes:
      - application/json
      description: 根据ID查询角色
      operationId: GetRole角色查询
      parameters:
      - description: 请求
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/model.IdReq'
      produces:
      - application/json
      responses:
        "200":
          description: 响应成功
          schema:
            allOf:
            - $ref: '#/definitions/resp.ResBody'
            - properties:
                data:
                  $ref: '#/definitions/platDb.Role'
              type: object
      security:
      - Token: []
      summary: 角色查询
      tags:
      - 角色配置
  /plat/role/page:
    post:
      consumes:
      - application/json
      description: 查询角色分页数据
      operationId: PageRole角色分页
      parameters:
      - description: 请求
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/platModel.RolePageReq'
      produces:
      - application/json
      responses:
        "200":
          description: 响应成功
          schema:
            allOf:
            - $ref: '#/definitions/resp.ResBody'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/model.PageRes'
                  - properties:
                      list:
                        items:
                          $ref: '#/definitions/platDb.Role'
                        type: array
                    type: object
              type: object
      security:
      - Token: []
      summary: 角色分页
      tags:
      - 角色配置
  /plat/router/add:
    post:
      consumes:
      - application/json
      description: 创建一个全新的路由
      operationId: AddRouter路由创建
      parameters:
      - description: 请求
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/platModel.RouterAddReq'
      produces:
      - application/json
      responses:
        "200":
          description: 响应成功
          schema:
            allOf:
            - $ref: '#/definitions/resp.ResBody'
            - properties:
                data:
                  type: boolean
              type: object
      security:
      - Token: []
      summary: 路由创建
      tags:
      - 路由接口
  /plat/router/edit:
    post:
      consumes:
      - application/json
      description: 根据ID编辑路由，只有部分字段可以修改
      operationId: EditRouter路由编辑
      parameters:
      - description: 请求
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/platModel.RouterEditReq'
      produces:
      - application/json
      responses:
        "200":
          description: 响应成功
          schema:
            allOf:
            - $ref: '#/definitions/resp.ResBody'
            - properties:
                data:
                  type: boolean
              type: object
      security:
      - Token: []
      summary: 路由编辑
      tags:
      - 路由接口
  /plat/router/get:
    post:
      consumes:
      - application/json
      description: 根据ID查询路由
      operationId: GetRouter路由查询
      parameters:
      - description: 请求
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/model.IdReq'
      produces:
      - application/json
      responses:
        "200":
          description: 响应成功
          schema:
            allOf:
            - $ref: '#/definitions/resp.ResBody'
            - properties:
                data:
                  $ref: '#/definitions/platDb.Router'
              type: object
      security:
      - Token: []
      summary: 路由查询
      tags:
      - 路由接口
  /plat/router/page:
    post:
      consumes:
      - application/json
      description: 查询路由分页数据
      operationId: PageRouter路由分页
      parameters:
      - description: 请求
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/platModel.RouterPageReq'
      produces:
      - application/json
      responses:
        "200":
          description: 响应成功
          schema:
            allOf:
            - $ref: '#/definitions/resp.ResBody'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/model.PageRes'
                  - properties:
                      list:
                        items:
                          $ref: '#/definitions/platDb.Router'
                        type: array
                    type: object
              type: object
      security:
      - Token: []
      summary: 路由分页
      tags:
      - 路由接口
securityDefinitions:
  Token:
    in: header
    name: Token
    type: apiKey
swagger: "2.0"
tags:
- description: 基础开发接口
  name: 开放接口
x-tagGroups:
- name: 基础
  tags:
  - 开放接口
- name: 平台
  tags:
  - 租户管理
  - 集团部门
  - 角色配置
  - 登陆账号
  - 访问权限
  - 路由接口
  - 响应文言
  - 数据字典
